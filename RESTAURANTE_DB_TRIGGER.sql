--------------------- TRIGGER --------------------
/*
Trigger que impida hacer una reservación para un cliente que no se ha presentado en 
dos reservaciones pasadas.  (Prohibido hacer reservación) */

CREATE OR REPLACE FUNCTION PROHIBICION() RETURNS TRIGGER
AS
$PROHIBICION$
DECLARE
	PROHIBIR INT;
BEGIN 
	SELECT
		COUNT(ID_RESERVACION) INTO PROHIBIR
		FROM RESERVACION
		INNER JOIN CLIENTE ON CLIENTE.ID_CLIENTE = RESERVACION.ID_CLIENTE
		WHERE RESERVACION.ESTADO_RESERVACION = 'AUSENCIA' 
		AND RESERVACION.ID_CLIENTE = NEW.ID_CLIENTE;
	IF(PROHIBIR>=2) THEN
		RAISE EXCEPTION 'No es posible hacer una reservación';
	END IF; 
	RETURN NEW;
END;
$PROHIBICION$
LANGUAGE plpgsql;

CREATE TRIGGER PROHIBICION BEFORE
INSERT ON RESERVACION FOR EACH ROW 
EXECUTE PROCEDURE PROHIBICION();

INSERT INTO RESERVACION VALUES('1020','70','803','AUSENCIA','2021/05/20','2021/05/21');
INSERT INTO RESERVACION VALUES('1009','70','803','AUSENCIA','2021/09/20','2021/09/23');

--- SELECT * FROM RESERVACION
--- DELETE FROM RESERVACION WHERE ID_RESERVACION ='70'